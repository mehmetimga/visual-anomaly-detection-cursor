version: '3.8'

services:
  # Go API Service
  api-go:
    build:
      context: ../
      dockerfile: deploy/Dockerfile.api
    container_name: visual-anomaly-api
    ports:
      - "8080:8080"
    environment:
      - API_PORT=8080
      - JWT_SECRET=${JWT_SECRET:-supersecret}
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=auto
      - S3_BUCKET=images
      - S3_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - S3_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - EMBED_URL=http://embed-fastapi:8000
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_API_KEY=${QDRANT_API_KEY:-}
      - POSTGRES_DSN=postgres://visual:visual@postgres:5432/visual?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - ENABLE_QUANTIZATION=false
    depends_on:
      - qdrant
      - minio
      - embed-fastapi
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - visual-network

  # Python Embedding Service
  embed-fastapi:
    build:
      context: ../
      dockerfile: deploy/Dockerfile.embed
    container_name: visual-anomaly-embed
    environment:
      - MODEL_NAME=ViT-B-32
      - MODEL_DEVICE=cpu
      - BATCH_SIZE=16
      - WORKERS=1
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - visual-network

  # React Web App
  web:
    build:
      context: ../
      dockerfile: deploy/Dockerfile.web
    container_name: visual-anomaly-web
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE=http://localhost:8080/api
    depends_on:
      - api-go
    networks:
      - visual-network

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: visual-anomaly-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/readyz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - visual-network

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: visual-anomaly-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - visual-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: visual-anomaly-postgres
    environment:
      - POSTGRES_USER=visual
      - POSTGRES_PASSWORD=visual
      - POSTGRES_DB=visual
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U visual"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - visual-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: visual-anomaly-redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - visual-network

  # Thumbnailer Background Worker
  thumbnailer:
    build:
      context: ../
      dockerfile: deploy/Dockerfile.api
    container_name: visual-anomaly-thumbnailer
    command: ["./api", "worker", "--type=thumbnailer"]
    environment:
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=auto
      - S3_BUCKET=images
      - S3_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - S3_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - REDIS_URL=redis://redis:6379
      - POSTGRES_DSN=postgres://visual:visual@postgres:5432/visual?sslmode=disable
    depends_on:
      - minio
      - redis
      - postgres
    networks:
      - visual-network

networks:
  visual-network:
    driver: bridge

volumes:
  qdrant_storage:
  minio_data:
  postgres_data:
  redis_data:
